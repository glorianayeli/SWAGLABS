{
  "stats": {
    "suites": 4,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2021-11-16T17:53:41.176Z",
    "end": "2021-11-16T17:53:49.879Z",
    "duration": 8703,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "90adbe74-8b07-451f-a322-4e1bd4967d8e",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "07dde3b9-2d46-4269-a931-8ad8d0dc8bf3",
          "title": "login function",
          "fullFile": "C:\\Users\\glori\\Documents\\cursos\\automation_testing\\SWAGLABS\\tests\\login.spec.js",
          "file": "\\tests\\login.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"login function\"",
              "fullTitle": "login function \"before each\" hook in \"login function\"",
              "timedOut": null,
              "duration": 1721,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "let service = new edge.ServiceBuilder(\"C:\\\\Users\\\\glori\\\\Documents\\\\cursos\\\\automation_testing\\\\SWAGLABS\\\\driver\\\\edgedriver_win64\\\\msedgedriver.exe\");\ndriver = await new Builder().setEdgeService(service).forBrowser('MicrosoftEdge').build();\nlogin = new LoginPage(driver);\nawait login.load();",
              "err": {},
              "uuid": "593e7abe-fb58-4fd3-910f-2e8836e81f30",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"login function\"",
              "fullTitle": "login function \"after each\" hook in \"login function\"",
              "timedOut": null,
              "duration": 90,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "8683677a-05d7-4e06-9def-772f3b271aed",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "with valid credentials",
              "fullTitle": "login function with valid credentials",
              "timedOut": null,
              "duration": 1170,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await login.authenticate(\"standard_user\", \"secret_sauce\");\nconst resultUrl = await login.successRouting();\nresultUrl.should.equal(\"https://www.saucedemo.com/inventory.html\");",
              "err": {},
              "uuid": "b1af4970-77cc-4b12-8aae-13abf44d8cde",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "with invalid credentials",
              "fullTitle": "login function with invalid credentials",
              "timedOut": null,
              "duration": 497,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await login.authenticate(\"stan_user\", \"secret_sauce\");\nassert(await login.failedLogin(), \"Error not displayed\");",
              "err": {},
              "uuid": "9e38b9a5-133a-4338-b530-31cd0fd79157",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b1af4970-77cc-4b12-8aae-13abf44d8cde",
            "9e38b9a5-133a-4338-b530-31cd0fd79157"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1667,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "c083dd12-4e23-4cf0-9053-6e61884e19b4",
          "title": "completing a purchse in checkout flow",
          "fullFile": "C:\\Users\\glori\\Documents\\cursos\\automation_testing\\SWAGLABS\\tests\\checkout.spec.js",
          "file": "\\tests\\checkout.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"completing a purchse in checkout flow\"",
              "fullTitle": "completing a purchse in checkout flow \"before each\" hook in \"completing a purchse in checkout flow\"",
              "timedOut": null,
              "duration": 4212,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "let service = new edge.ServiceBuilder(\"C:\\\\Users\\\\glori\\\\Documents\\\\cursos\\\\automation_testing\\\\SWAGLABS\\\\driver\\\\edgedriver_win64\\\\msedgedriver.exe\");\ndriver = await new Builder().setEdgeService(service).forBrowser('MicrosoftEdge').build();\nhomePage = new inventoryPage(driver);\nlogin = new loginPage(driver);\ncart = new cartPage(driver);\ncheckoutPage = new checkout(driver);\nawait login.load();\nawait login.authenticate(\"standard_user\", \"secret_sauce\");",
              "err": {},
              "uuid": "c5c438a5-1694-45ab-8e09-0ef0f3a225f4",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"completing a purchse in checkout flow\"",
              "fullTitle": "completing a purchse in checkout flow \"after each\" hook in \"completing a purchse in checkout flow\"",
              "timedOut": null,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "a99e66bc-465a-4d56-96c2-47466bfea8fc",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "checkout flow",
              "fullTitle": "completing a purchse in checkout flow checkout flow",
              "timedOut": null,
              "duration": 1087,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await homePage.addSauceLabsOnesieItem();\nawait homePage.clickShoppingCart();\nawait cart.clickingCheckoutButton();\nawait checkoutPage.formCheckout();\nlet orderConfirmationPage = await checkoutPage.checkoutOverview();\norderConfirmationPage.should.equal(\"https://www.saucedemo.com/checkout-complete.html\");",
              "err": {},
              "uuid": "66362814-d4d4-47b6-8606-ddb9b69f535c",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "66362814-d4d4-47b6-8606-ddb9b69f535c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1087,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "a680356f-4e8d-4cc1-8d5d-37dd779e4bca",
          "title": "Cart functions",
          "fullFile": "C:\\Users\\glori\\Documents\\cursos\\automation_testing\\SWAGLABS\\tests\\cart.spec.js",
          "file": "\\tests\\cart.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Cart functions\"",
              "fullTitle": "Cart functions \"before each\" hook in \"Cart functions\"",
              "timedOut": null,
              "duration": 1976,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "let service = new edge.ServiceBuilder(\"C:\\\\Users\\\\glori\\\\Documents\\\\cursos\\\\automation_testing\\\\SWAGLABS\\\\driver\\\\edgedriver_win64\\\\msedgedriver.exe\");\ndriver = await new Builder().setEdgeService(service).forBrowser('MicrosoftEdge').build();\nhomePage = new inventoryPage(driver);\nlogin = new loginPage(driver);\ncart = new cartPage(driver);\nawait login.load();\nawait login.authenticate(\"standard_user\", \"secret_sauce\");",
              "err": {},
              "uuid": "ea352868-6a27-4daf-a393-cc1574cead23",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Cart functions\"",
              "fullTitle": "Cart functions \"after each\" hook in \"Cart functions\"",
              "timedOut": null,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "d9f8476f-d835-462b-8de6-a8cfd6173feb",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "adding multiple items to the cart page and verifiying that have been correctly adding",
              "fullTitle": "Cart functions adding multiple items to the cart page and verifiying that have been correctly adding",
              "timedOut": null,
              "duration": 502,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let correctlyAdded = true;\nlet itemsAdded = await homePage.addItemsToTheCard();\nawait homePage.clickShoppingCart();\nlet itemsCart = await cart.getItemsCard();\nconsole.log(itemsCart)\nconsole.log(itemsAdded)\nitemsAdded.forEach((elem) => {\n  if (itemsCart.indexOf(elem.name) === -1) {\n    correctlyAdded = false;\n  }\n});\nassert(correctlyAdded, \"items have not correctly added\");",
              "err": {},
              "uuid": "8446f708-6741-43c3-ad13-3c334d1bcde9",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adding Sauce Labs Onesie to the shopping cart",
              "fullTitle": "Cart functions Adding Sauce Labs Onesie to the shopping cart",
              "timedOut": null,
              "duration": 246,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await homePage.addSauceLabsOnesieItem();\nawait homePage.clickShoppingCart();\nconst items = await cart.getItemsCard();\nlet itemIsAble = true;\nif (items.indexOf(\"Sauce Labs Onesie\") === -1) {\n  itemIsAble = false;\n}\nassert(itemIsAble, \"the item wasn't added correctly\");",
              "err": {},
              "uuid": "522047fa-2eb2-4281-8417-f8fcf603a7fc",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8446f708-6741-43c3-ad13-3c334d1bcde9",
            "522047fa-2eb2-4281-8417-f8fcf603a7fc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 748,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "7d81c5bd-5851-4a58-a1a7-1ca09d161d35",
          "title": "inventory logout function",
          "fullFile": "C:\\Users\\glori\\Documents\\cursos\\automation_testing\\SWAGLABS\\tests\\inventory.spec.js",
          "file": "\\tests\\inventory.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"inventory logout function\"",
              "fullTitle": "inventory logout function \"before each\" hook in \"inventory logout function\"",
              "timedOut": null,
              "duration": 3165,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "let service = new edge.ServiceBuilder(\"C:\\\\Users\\\\glori\\\\Documents\\\\cursos\\\\automation_testing\\\\SWAGLABS\\\\driver\\\\edgedriver_win64\\\\msedgedriver.exe\");\ndriver = await new Builder().setEdgeService(service).forBrowser('MicrosoftEdge').build();\nhomePage = new inventoryPage(driver);\nlogin = new loginPage(driver);\nawait login.load();\nawait login.authenticate(\"standard_user\", \"secret_sauce\");",
              "err": {},
              "uuid": "a8b416e4-1cc1-43ba-b5d9-bfe562759b19",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"inventory logout function\"",
              "fullTitle": "inventory logout function \"after each\" hook in \"inventory logout function\"",
              "timedOut": null,
              "duration": 58,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "23814173-cc14-47a0-b932-4c34dc026aa9",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "cheking if logout function is routing to homepage",
              "fullTitle": "inventory logout function cheking if logout function is routing to homepage",
              "timedOut": null,
              "duration": 298,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const urlAfterLogout = await homePage.logout();\nurlAfterLogout.should.equal(\"https://www.saucedemo.com/\");",
              "err": {},
              "uuid": "51db3564-4e54-4f0e-9bd7-0d5277fa5bb8",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "low to high function",
              "fullTitle": "inventory logout function low to high function",
              "timedOut": null,
              "duration": 189,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let prices = await homePage.lowToHigh();\nconst Sortprices = prices.sort(function (a, b) {\n  return a - b;\n});\nprices.should.equal(Sortprices);",
              "err": {},
              "uuid": "8eef98fa-1495-411f-a554-64e7d8fc79e7",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "51db3564-4e54-4f0e-9bd7-0d5277fa5bb8",
            "8eef98fa-1495-411f-a554-64e7d8fc79e7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 487,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": null,
      "version": "6.0.1"
    }
  }
}