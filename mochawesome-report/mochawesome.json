{
  "stats": {
    "suites": 3,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2021-11-15T06:44:06.469Z",
    "end": "2021-11-15T06:44:15.478Z",
    "duration": 9009,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9ab64953-3bff-459e-9f1e-9b7228c3fb14",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9abe21e3-2806-4832-8bd4-e3fb4db858f1",
          "title": "Cart functions",
          "fullFile": "C:\\Users\\glori\\Documents\\cursos\\automation_testing\\SWAGLABS\\tests\\cart.spec.js",
          "file": "\\tests\\cart.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Cart functions\"",
              "fullTitle": "Cart functions \"before each\" hook in \"Cart functions\"",
              "timedOut": null,
              "duration": 4190,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "let service = new edge.ServiceBuilder(\"C:\\\\Users\\\\glori\\\\Documents\\\\cursos\\\\automation_testing\\\\SWAGLABS\\\\driver\\\\edgedriver_win64\\\\msedgedriver.exe\");\ndriver = await new Builder().setEdgeService(service).forBrowser('MicrosoftEdge').build();\nhomePage = new inventoryPage(driver);\nlogin = new loginPage(driver);\ncart = new cartPage(driver);\nawait login.load();\nawait login.authenticate(\"standard_user\", \"secret_sauce\");",
              "err": {},
              "uuid": "c2611b82-a05f-426c-903b-5c526cac0eb0",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Cart functions\"",
              "fullTitle": "Cart functions \"after each\" hook in \"Cart functions\"",
              "timedOut": null,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "684d71df-1d24-47b1-b8b6-24c55296262d",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "adding multiple items to the cart page and verifiying that have been correctly adding",
              "fullTitle": "Cart functions adding multiple items to the cart page and verifiying that have been correctly adding",
              "timedOut": null,
              "duration": 605,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let correctlyAdded = true;\nlet itemsAdded = await homePage.addItemsToTheCard();\nawait homePage.clickShoppingCart();\nlet itemsCart = await cart.getItemsCard();\nconsole.log(itemsCart)\nconsole.log(itemsAdded)\nitemsAdded.forEach((elem) => {\n  if (itemsCart.indexOf(elem.name) === -1) {\n    correctlyAdded = false;\n  }\n});\nassert(correctlyAdded, \"items have not correctly added\");",
              "err": {},
              "uuid": "a7fbbe4f-2293-4d67-a5a4-cd4c1cfab68c",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adding Sauce Labs Onesie to the shopping cart",
              "fullTitle": "Cart functions Adding Sauce Labs Onesie to the shopping cart",
              "timedOut": null,
              "duration": 408,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await homePage.addSauceLabsOnesieItem();\nawait homePage.clickShoppingCart();\nconst items = await cart.getItemsCard();\nconsole.log(`xd ${items} valor ${items.indexOf(\"Sauce Labs Onesie\")}`);\nlet itemIsAble = true;\nif (items.indexOf(\"Sauce Labs Onesie\") === -1) {\n  itemIsAble = false;\n}\nconsole.log(itemIsAble);\nassert(itemIsAble, \"the item wasn't added correctly\");",
              "err": {},
              "uuid": "9288319c-36ac-4eec-9a70-6aacd137ca72",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a7fbbe4f-2293-4d67-a5a4-cd4c1cfab68c",
            "9288319c-36ac-4eec-9a70-6aacd137ca72"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1013,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "546059e3-4af1-4bbf-aab7-471b2d8ec4d3",
          "title": "login function",
          "fullFile": "C:\\Users\\glori\\Documents\\cursos\\automation_testing\\SWAGLABS\\tests\\login.spec.js",
          "file": "\\tests\\login.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"login function\"",
              "fullTitle": "login function \"before each\" hook in \"login function\"",
              "timedOut": null,
              "duration": 4280,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "let service = new edge.ServiceBuilder(\"C:\\\\Users\\\\glori\\\\Documents\\\\cursos\\\\automation_testing\\\\SWAGLABS\\\\driver\\\\edgedriver_win64\\\\msedgedriver.exe\");\ndriver = await new Builder().setEdgeService(service).forBrowser('MicrosoftEdge').build();\nlogin = new LoginPage(driver);\nawait login.load();",
              "err": {},
              "uuid": "87af78c1-ef09-46b1-a970-9449d2ee6ae0",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"login function\"",
              "fullTitle": "login function \"after each\" hook in \"login function\"",
              "timedOut": null,
              "duration": 111,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "75fa96f2-ff3f-4553-8641-76a0a9da6148",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "with valid credentials",
              "fullTitle": "login function with valid credentials",
              "timedOut": null,
              "duration": 339,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await login.authenticate(\"standard_user\", \"secret_sauce\");\nconst resultUrl = await login.successRouting();\nresultUrl.should.equal(\"https://www.saucedemo.com/inventory.html\");",
              "err": {},
              "uuid": "88158e25-a557-42ae-84b8-32d3dcc3bf54",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "with invalid credentials",
              "fullTitle": "login function with invalid credentials",
              "timedOut": null,
              "duration": 449,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await login.authenticate(\"stan_user\", \"secret_sauce\");\nassert(await login.failedLogin(), \"Error not displayed\");",
              "err": {},
              "uuid": "518645f9-48a0-4baa-815c-d1906dac059d",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "88158e25-a557-42ae-84b8-32d3dcc3bf54",
            "518645f9-48a0-4baa-815c-d1906dac059d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 788,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "116dfcd3-a925-4758-9ef0-0f25a27ff000",
          "title": "inventory logout function",
          "fullFile": "C:\\Users\\glori\\Documents\\cursos\\automation_testing\\SWAGLABS\\tests\\inventory.spec.js",
          "file": "\\tests\\inventory.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"inventory logout function\"",
              "fullTitle": "inventory logout function \"before each\" hook in \"inventory logout function\"",
              "timedOut": null,
              "duration": 4122,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "let service = new edge.ServiceBuilder(\"C:\\\\Users\\\\glori\\\\Documents\\\\cursos\\\\automation_testing\\\\SWAGLABS\\\\driver\\\\edgedriver_win64\\\\msedgedriver.exe\");\ndriver = await new Builder().setEdgeService(service).forBrowser('MicrosoftEdge').build();\nhomePage = new inventoryPage(driver);\nlogin = new loginPage(driver);\nawait login.load();\nawait login.authenticate(\"standard_user\", \"secret_sauce\");",
              "err": {},
              "uuid": "c6699480-0a9a-4686-af38-88b6aecb672c",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"inventory logout function\"",
              "fullTitle": "inventory logout function \"after each\" hook in \"inventory logout function\"",
              "timedOut": null,
              "duration": 120,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "cdd75c56-bc45-4210-ab9c-61e923c98a15",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "cheking if logout function is routing to homepage",
              "fullTitle": "inventory logout function cheking if logout function is routing to homepage",
              "timedOut": null,
              "duration": 246,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const urlAfterLogout = await homePage.logout();\nurlAfterLogout.should.equal(\"https://www.saucedemo.com/\");",
              "err": {},
              "uuid": "262c182e-9256-4638-b6e1-a9fefc753896",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "low to high function",
              "fullTitle": "inventory logout function low to high function",
              "timedOut": null,
              "duration": 543,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let prices = await homePage.lowToHigh();\nconst Sortprices = prices.sort(function (a, b) {\n  return a - b;\n});\nprices.should.equal(Sortprices);",
              "err": {},
              "uuid": "1a919381-2464-46df-a6fb-88fa02a8e4c2",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "262c182e-9256-4638-b6e1-a9fefc753896",
            "1a919381-2464-46df-a6fb-88fa02a8e4c2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 789,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": null,
      "version": "6.0.1"
    }
  }
}