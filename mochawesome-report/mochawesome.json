{
  "stats": {
    "suites": 4,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2021-11-17T04:48:14.968Z",
    "end": "2021-11-17T04:48:23.490Z",
    "duration": 8522,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6540ad2c-678f-4bc6-9e50-3b1eea2bdac3",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d0a19f16-59eb-42d3-9381-9cd9aa66f62b",
          "title": "completing a purchse in checkout flow",
          "fullFile": "C:\\Users\\glori\\Documents\\cursos\\automation_testing\\SWAGLABS\\tests\\checkout.spec.js",
          "file": "\\tests\\checkout.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"completing a purchse in checkout flow\"",
              "fullTitle": "completing a purchse in checkout flow \"before each\" hook in \"completing a purchse in checkout flow\"",
              "timedOut": null,
              "duration": 4811,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "let service = new edge.ServiceBuilder(\"C:\\\\Users\\\\glori\\\\Documents\\\\cursos\\\\automation_testing\\\\SWAGLABS\\\\driver\\\\edgedriver_win64\\\\msedgedriver.exe\");\ndriver = await new Builder().setEdgeService(service).forBrowser('MicrosoftEdge').build();\nhomePage = new inventoryPage(driver);\nlogin = new loginPage(driver);\ncart = new cartPage(driver);\ncheckoutPage = new checkout(driver);\nawait login.load();\nawait login.authenticate(\"standard_user\", \"secret_sauce\");",
              "err": {},
              "uuid": "db040800-dd22-43e8-995a-adfdf091c963",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"completing a purchse in checkout flow\"",
              "fullTitle": "completing a purchse in checkout flow \"after each\" hook in \"completing a purchse in checkout flow\"",
              "timedOut": null,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "72039735-8d24-46c4-a7b9-fb6de2700a8b",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "checkout flow",
              "fullTitle": "completing a purchse in checkout flow checkout flow",
              "timedOut": null,
              "duration": 526,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await homePage.addSauceLabsOnesieItem();\nawait homePage.clickShoppingCart();\nawait cart.clickingCheckoutButton();\nawait checkoutPage.formCheckout();\nlet orderConfirmationPage = await checkoutPage.checkoutOverview();\norderConfirmationPage.should.equal(\"https://www.saucedemo.com/checkout-complete.html\");",
              "err": {},
              "uuid": "18db5781-c69a-40c1-b2d8-4f90fd67c853",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "18db5781-c69a-40c1-b2d8-4f90fd67c853"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 526,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "a01f1a0b-c7c9-4802-b7ef-e5637aa802ff",
          "title": "Cart functions",
          "fullFile": "C:\\Users\\glori\\Documents\\cursos\\automation_testing\\SWAGLABS\\tests\\cart.spec.js",
          "file": "\\tests\\cart.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Cart functions\"",
              "fullTitle": "Cart functions \"before each\" hook in \"Cart functions\"",
              "timedOut": null,
              "duration": 2691,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "let service = new edge.ServiceBuilder(\"C:\\\\Users\\\\glori\\\\Documents\\\\cursos\\\\automation_testing\\\\SWAGLABS\\\\driver\\\\edgedriver_win64\\\\msedgedriver.exe\");\ndriver = await new Builder().setEdgeService(service).forBrowser('MicrosoftEdge').build();\nhomePage = new inventoryPage(driver);\nlogin = new loginPage(driver);\ncart = new cartPage(driver);\nawait login.load();\nawait login.authenticate(\"standard_user\", \"secret_sauce\");",
              "err": {},
              "uuid": "b2597643-a597-48d0-b30a-e65f0dac8f9b",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Cart functions\"",
              "fullTitle": "Cart functions \"after each\" hook in \"Cart functions\"",
              "timedOut": null,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "b777037f-fa49-498b-af48-edd437fe7e87",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "adding multiple items to the cart page and verifiying that have been correctly adding",
              "fullTitle": "Cart functions adding multiple items to the cart page and verifiying that have been correctly adding",
              "timedOut": null,
              "duration": 847,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let correctlyAdded = true;\nlet itemsAdded = await homePage.addItemsToTheCard();\nawait homePage.clickShoppingCart();\nlet itemsCart = await cart.getItemsCard();\nitemsAdded.forEach((elem) => {\n  if (itemsCart.indexOf(elem.name) === -1) {\n    correctlyAdded = false;\n  }\n});\nassert(correctlyAdded, \"items have not correctly added\");",
              "err": {},
              "uuid": "021e0fe3-17d8-4add-97b1-8e804f13c76b",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adding Sauce Labs Onesie to the shopping cart",
              "fullTitle": "Cart functions Adding Sauce Labs Onesie to the shopping cart",
              "timedOut": null,
              "duration": 290,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await homePage.addSauceLabsOnesieItem();\nawait homePage.clickShoppingCart();\nconst items = await cart.getItemsCard();\nlet itemIsAble = true;\nif (items.indexOf(\"Sauce Labs Onesie\") === -1) {\n  itemIsAble = false;\n}\nassert(itemIsAble, \"the item wasn't added correctly\");",
              "err": {},
              "uuid": "d4676e1a-0173-479b-aef5-7a161a4d3a36",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "021e0fe3-17d8-4add-97b1-8e804f13c76b",
            "d4676e1a-0173-479b-aef5-7a161a4d3a36"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1137,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "eccd73f6-45a5-4f89-a51b-89ac2a491d41",
          "title": "inventory logout function",
          "fullFile": "C:\\Users\\glori\\Documents\\cursos\\automation_testing\\SWAGLABS\\tests\\inventory.spec.js",
          "file": "\\tests\\inventory.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"inventory logout function\"",
              "fullTitle": "inventory logout function \"before each\" hook in \"inventory logout function\"",
              "timedOut": null,
              "duration": 2835,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "let service = new edge.ServiceBuilder(\"C:\\\\Users\\\\glori\\\\Documents\\\\cursos\\\\automation_testing\\\\SWAGLABS\\\\driver\\\\edgedriver_win64\\\\msedgedriver.exe\");\ndriver = await new Builder().setEdgeService(service).forBrowser('MicrosoftEdge').build();\nhomePage = new inventoryPage(driver);\nlogin = new loginPage(driver);\nawait login.load();\nawait login.authenticate(\"standard_user\", \"secret_sauce\");",
              "err": {},
              "uuid": "b41ef9fe-18c8-4388-8c05-651bbf299eed",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"inventory logout function\"",
              "fullTitle": "inventory logout function \"after each\" hook in \"inventory logout function\"",
              "timedOut": null,
              "duration": 61,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "ffc7c2c2-908b-4b8e-a7f8-a27826d9b5e4",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "cheking if logout function is routing to homepage",
              "fullTitle": "inventory logout function cheking if logout function is routing to homepage",
              "timedOut": null,
              "duration": 435,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const urlAfterLogout = await homePage.logout();\nurlAfterLogout.should.equal(\"https://www.saucedemo.com/\");",
              "err": {},
              "uuid": "e213dc1f-c6ea-4aa8-a2f7-cd77109f0146",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "low to high function",
              "fullTitle": "inventory logout function low to high function",
              "timedOut": null,
              "duration": 464,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let prices = await homePage.lowToHigh();\nconst Sortprices = prices.sort(function (a, b) {\n  return a - b;\n});\nprices.should.equal(Sortprices);",
              "err": {},
              "uuid": "03116366-f1b4-47b1-9949-c19d16e76448",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e213dc1f-c6ea-4aa8-a2f7-cd77109f0146",
            "03116366-f1b4-47b1-9949-c19d16e76448"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 899,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "c21c3eeb-d873-426a-b8d3-68414b7fd92c",
          "title": "login function",
          "fullFile": "C:\\Users\\glori\\Documents\\cursos\\automation_testing\\SWAGLABS\\tests\\login.spec.js",
          "file": "\\tests\\login.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"login function\"",
              "fullTitle": "login function \"before each\" hook in \"login function\"",
              "timedOut": null,
              "duration": 3252,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "let service = new edge.ServiceBuilder(\"C:\\\\Users\\\\glori\\\\Documents\\\\cursos\\\\automation_testing\\\\SWAGLABS\\\\driver\\\\edgedriver_win64\\\\msedgedriver.exe\");\ndriver = await new Builder().setEdgeService(service).forBrowser('MicrosoftEdge').build();\nlogin = new LoginPage(driver);\nawait login.load();",
              "err": {},
              "uuid": "8784c4ed-d25e-4d01-b1d3-704f9493da95",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"login function\"",
              "fullTitle": "login function \"after each\" hook in \"login function\"",
              "timedOut": null,
              "duration": 61,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "44882ba7-7d4f-4e75-acfb-1aef612c13a4",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "with valid credentials",
              "fullTitle": "login function with valid credentials",
              "timedOut": null,
              "duration": 557,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await login.authenticate(\"standard_user\", \"secret_sauce\");\nconst resultUrl = await login.successRouting();\nresultUrl.should.equal(\"https://www.saucedemo.com/inventory.html\");",
              "err": {},
              "uuid": "7374b16c-1e28-49f6-90de-d4e6c485562e",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "with invalid credentials",
              "fullTitle": "login function with invalid credentials",
              "timedOut": null,
              "duration": 469,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await login.authenticate(\"stan_user\", \"secret_sauce\");\nassert(await login.failedLogin(), \"Error not displayed\");",
              "err": {},
              "uuid": "f1de498d-8b1c-4fb7-b595-41c070638fd6",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7374b16c-1e28-49f6-90de-d4e6c485562e",
            "f1de498d-8b1c-4fb7-b595-41c070638fd6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1026,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": null,
      "version": "6.0.1"
    }
  }
}